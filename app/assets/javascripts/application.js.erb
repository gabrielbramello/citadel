// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require popper
//= require bootstrap-sprockets
//= require cocoon
//= require markdown.converter
//= require markdown.editor
//= require markdown.extra
//= require leagues
//= require pagedown

$(function() {
    // Disable disabled links
    $('a[disabled=disabled]').click(function(event) {
        event.preventDefault();
    });

    // Enable all tooltips
    $("[data-toggle='tooltip']").tooltip();

    // Tab toggling for select tags
    $("select[data-toggle='tab']").on('change', function(e) {
        var self = $(this);
        var target_id = self.val();

        self.find("option").each(function(index, option) {
            var id = option.value;

            if (id === target_id) {
                $("#" + id).addClass("active");
            } else {
                $("#" + option.value).removeClass('active');
            }
        });
    });

    // Most browsers keep form data around, so we need to trigger change on load
    $("select[data-toggle='tab']").trigger('change', null);

    // Quoting for Forums and Comms
    $("*[data-quote-id]").click(function() {
        console.log('quote');

        var btn = $(this);
        var quote = btn.attr("data-quote-text");
        if (quote[quote.length - 1] != '\n') {
            quote += '\n';
        }

        var target = $("#" + btn.attr("data-quote-id"));
        var text = target.val();
        if (text[text.length - 1] != '\n' && text.length > 0) {
            text += '\n';
        }

        target.val(text + quote);
        target.focus();
    });

    // Markdown Preview
    $('*[data-markdown-preview').click(function() {
        console.log('preview');

        var element = $(this);
        var preview = $('#' + element.attr('data-markdown-preview'));
        var source = $('#' + element.attr('data-markdown-source'));
        var no_escape = element.attr('data-markdown-escape') == 'false';

        if (no_escape) {
            var url = '/markdown_preview?escape=false';
        } else {
            var url = '/markdown_preview?escape=true';
        }

        var markdown = source.val();
        $.ajax(url, {
            method: 'POST',
            data: markdown,
            error: function(req, status, error) {
                preview.html(error);
            },
            success: function(res, status, req) {
                preview.html(res);
            },
        });
    });
});
